from keras.preprocessing.image import load_img, img_to_array
from keras.models import load_model
import matplotlib.pyplot as plt
import numpy as np

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡∏£‡∏ô‡πÑ‡∏ß‡πâ
model = load_model("model-edit.keras")

# Class Labels (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô train)
class_labels = ["Carabaoteats üçè", "Flacourtia rukam üçá", "Durian üçà", "Rambutan üçí"]

# ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏û‡∏£‡∏µ‡πÇ‡∏õ‡∏£‡πÄ‡∏ã‡∏™‡∏†‡∏≤‡∏û
img_path = "/content/images.jpg"
img = load_img(img_path, target_size=(224, 224))
plt.imshow(img)
plt.axis("off")
plt.show()

img = img_to_array(img)
img = img.reshape(1, 224, 224, 3)
img = img.astype("float32") / 255.0  # Normalize ‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0-1

# ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏ú‡∏•
result = model.predict(img)[0]  # ‡∏à‡∏∞‡πÑ‡∏î‡πâ array ‡∏Ç‡∏≠‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏•‡∏≤‡∏™
predicted_class = np.argmax(result)  # ‡∏´‡∏≤‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
confidence = result[predicted_class] * 100  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
print(f"‚úÖ Predict: {class_labels[predicted_class]} ({confidence:.2f}%)")
