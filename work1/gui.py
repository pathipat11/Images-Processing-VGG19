import tkinter as tk
from tkinter import filedialog
from keras.models import load_model  # type: ignore
from keras.preprocessing.image import load_img, img_to_array  # type: ignore
import numpy as np
from PIL import Image, ImageTk

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡∏£‡∏ô‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
try:
    model = load_model("model.keras")
except Exception as e:
    print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•: {e}")
    model = None

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏†‡∏≤‡∏û
def select_image():
    file_path = filedialog.askopenfilename(filetypes=[("Image Files", ".jpg"), ("PNG files", ".png"), ("JPEG files", "*.jpeg")])
    if not file_path:
        return

    # ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
    global img_path
    img_path = file_path  # ‡πÄ‡∏Å‡πá‡∏ö path ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
    img_display = Image.open(file_path)
    img_display = img_display.resize((250, 250))
    img_display = ImageTk.PhotoImage(img_display)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
    image_label.config(image=img_display)
    image_label.image = img_display  # ‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏†‡∏≤‡∏û
    result_label.config(text="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≤‡∏¢‡∏ú‡∏•", font=("Arial", 16, "bold"), fg="white")

def predict_image():
    if model is None:
        result_label.config(text="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÑ‡∏î‡πâ")
        return

    if not img_path:
        result_label.config(text="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô")
        return

    # ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå
    img = load_img(img_path, target_size=(224, 224))
    img_array = img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0).astype('float32')
    img_array -= [123.68, 116.779, 103.939]  # Normalize

    # ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏†‡∏≤‡∏û
    result = model.predict(img_array)[0][0]
    percent = result * 100
    if result >= 0.5:
        label_text = f"‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\n‡πÄ‡∏á‡∏≤‡∏∞ üçí ({percent:.2f}%)"
        label_color = "red" 
    else:
        label_text = f"‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\n‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô üçà ({100 - percent:.2f}%)"
        label_color = "#FFB22C"  
    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
    result_label.config(text=label_text, font=("Arial", 16, "bold"), fg=label_color)

def clear_image():
    global img_path
    img_path = None  # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï path ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
    image_label.config(image="")
    result_label.config(text="‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà", font=("Arial", 16, "bold"), fg="white")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á GUI
root = tk.Tk()
root.title("‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏ú‡∏•‡πÑ‡∏°‡πâ üçíüçà")
root.geometry("600x800")
root.configure(bg="#27445D")  # ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á

# ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
window_width, window_height = 600, 800
screen_width = root.winfo_screenwidth()
screen_height = root.winfo_screenheight()
x_position = (screen_width - window_width) // 2
y_position = (screen_height - window_height) // 2
root.geometry(f"{window_width}x{window_height}+{x_position}+{y_position}")

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ grid
root.grid_rowconfigure(0, weight=0)
root.grid_rowconfigure(1, weight=1)
root.grid_rowconfigure(2, weight=0)
root.grid_rowconfigure(3, weight=0)
root.grid_rowconfigure(4, weight=0)
root.grid_columnconfigure(0, weight=1)
root.grid_columnconfigure(1, weight=1)
root.grid_columnconfigure(2, weight=1)

name_label = tk.Label(root, text="‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏ú‡∏•‡πÑ‡∏°‡πâ üçíüçà", font=("Arial", 22, "bold"), fg="white", bg="#27445D")
name_label.grid(row=0, column=0, columnspan=3, pady=40)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
image_frame = tk.Frame(root, bg="#FFFFFF", bd=5, relief="sunken", width=300, height=300)
image_frame.grid(row=1, column=0, columnspan=3, pady=20)
image_frame.pack_propagate(False)

placeholder = Image.new("RGB", (250, 250), (240, 240, 240))
placeholder = ImageTk.PhotoImage(placeholder)

# ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
image_label = tk.Label(image_frame, bg="#FFFFFF", image=placeholder)
image_label.image = placeholder
image_label.pack(expand=True)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Frame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°
button_frame = tk.Frame(root, bg="#27445D")
button_frame.grid(row=3, column=0, columnspan=3, pady=10)

# ‡πÉ‡∏ä‡πâ Grid ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°
btn_select = tk.Button(button_frame, text="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û üì∑", command=select_image, font=("Arial", 14), width=15, relief="raised", bg="#FFA823", fg="white", bd=3, activebackground="#FFD35A")
btn_select.grid(row=1, column=0, padx=10, sticky="ew")

btn_predict = tk.Button(button_frame, text="‡∏ó‡πâ‡∏≤‡∏¢‡∏ú‡∏• üçåüî¥", command=predict_image, font=("Arial", 14), width=15, relief="raised", bg="#6499E9", fg="white", bd=3, activebackground="#9EDDFF")
btn_predict.grid(row=1, column=1, padx=10, sticky="ew")

# ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
btn_clear = tk.Button(root, text="‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‚ùå", command=clear_image, font=("Arial", 14), width=2, relief="raised", bg="#900C3F", fg="white", bd=3, activebackground="#C70039")
btn_clear.grid(row=4, column=1, pady=10, sticky="ew")

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
result_label = tk.Label(root, text="‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà", font=("Arial", 16, "bold"), fg="white", bg="#27445D", justify="center")
result_label.grid(row=2, column=0, columnspan=3, pady=20)

# ‡πÄ‡∏£‡∏¥‡πà‡∏° GUI
img_path = None  # ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
root.mainloop()
